{
  "name": "UIButton",
  "source": [
    [
      "UI.ts",
      305,
      21
    ]
  ],
  "kind": "Class",
  "id": 938,
  "comment": "**[Experimental]** A simple button that extends [`UI`](#link) to track clicks and hovers.",
  "constructor": [
    {
      "name": "constructor",
      "source": [
        [
          "UI.ts",
          307,
          31
        ]
      ],
      "id": 940,
      "flags": {},
      "overrides": "UI.__constructor",
      "inherits": false,
      "signatures": [
        {
          "comment": "Create an UIButton. A button has 2 states, \"clicks\" (number) and \"hover\" (boolean), which you can access through [`UI.state`](#link) function. You may also create a new UIButton using one of the static helper like [`UI.fromRectangle`](#link) or [`UI.fromCircle`](#link).",
          "returns": "UIButton",
          "returns_comment": false,
          "parameters": [
            {
              "name": "group",
              "comment": "a Group that defines the UI's appearance",
              "type": "GroupLike",
              "default": false
            },
            {
              "name": "shape",
              "comment": "specifies the shape of the Group",
              "type": "string",
              "default": false
            },
            {
              "name": "states",
              "comment": "Optional default state object",
              "type": "",
              "default": "{}"
            },
            {
              "name": "id",
              "comment": "Optional id string\n",
              "type": "string",
              "default": false
            }
          ],
          "tags": []
        }
      ]
    }
  ],
  "accessors": [
    {
      "name": "group",
      "source": [
        [
          "UI.ts",
          109,
          11
        ],
        [
          "UI.ts",
          110,
          11
        ]
      ],
      "id": 1000,
      "flags": {},
      "overrides": false,
      "inherits": "UI.group",
      "comment": "A group of Pts that defines this UI's shape.",
      "getter": {
        "type": "Group"
      },
      "setter": {
        "type": "void",
        "parameters": {
          "name": "d",
          "comment": "",
          "type": "Group",
          "default": false
        }
      }
    },
    {
      "name": "id",
      "source": [
        [
          "UI.ts",
          102,
          8
        ],
        [
          "UI.ts",
          103,
          8
        ]
      ],
      "id": 996,
      "flags": {},
      "overrides": false,
      "inherits": "UI.id",
      "comment": "An unique id of the UI.",
      "getter": {
        "type": "string"
      },
      "setter": {
        "type": "void",
        "parameters": {
          "name": "d",
          "comment": "",
          "type": "string",
          "default": false
        }
      }
    },
    {
      "name": "shape",
      "source": [
        [
          "UI.ts",
          116,
          11
        ],
        [
          "UI.ts",
          117,
          11
        ]
      ],
      "id": 1004,
      "flags": {},
      "overrides": false,
      "inherits": "UI.shape",
      "comment": "A string that describes this UI's shape.",
      "getter": {
        "type": "string"
      },
      "setter": {
        "type": "void",
        "parameters": {
          "name": "d",
          "comment": "",
          "type": "string",
          "default": false
        }
      }
    }
  ],
  "methods": [
    {
      "name": "hold",
      "source": [
        [
          "UI.ts",
          190,
          16
        ]
      ],
      "id": 1025,
      "flags": {
        "isProtected": true
      },
      "overrides": false,
      "inherits": "UI.hold",
      "signatures": [
        {
          "comment": "Continue to keep track of an actions even if it's not within this UI. Useful for hover-leave and drag-outside.",
          "returns": "number",
          "returns_comment": false,
          "parameters": [
            {
              "name": "type",
              "comment": "a string defined in [`UIPointerActions`](#link)\n",
              "type": "string",
              "default": false
            }
          ],
          "tags": []
        }
      ]
    },
    {
      "name": "listen",
      "source": [
        [
          "UI.ts",
          171,
          8
        ]
      ],
      "id": 1020,
      "flags": {},
      "overrides": false,
      "inherits": "UI.listen",
      "signatures": [
        {
          "comment": "Listen for UI events and trigger action handlers.",
          "returns": "boolean",
          "returns_comment": false,
          "parameters": [
            {
              "name": "type",
              "comment": "an action type. Can be one of UIPointerActions or a custom one.",
              "type": "string",
              "default": false
            },
            {
              "name": "p",
              "comment": "a point to check",
              "type": "PtLike",
              "default": false
            },
            {
              "name": "evt",
              "comment": "a MouseEvent emitted by the browser (See [MDN docs](https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent))\n",
              "type": "MouseEvent",
              "default": false
            }
          ],
          "tags": []
        }
      ]
    },
    {
      "name": "off",
      "source": [
        [
          "UI.ts",
          154,
          5
        ]
      ],
      "id": 1016,
      "flags": {},
      "overrides": false,
      "inherits": "UI.off",
      "signatures": [
        {
          "comment": "Remove an event handler.",
          "returns": "boolean",
          "returns_comment": false,
          "parameters": [
            {
              "name": "type",
              "comment": "event type",
              "type": "string",
              "default": false
            },
            {
              "name": "which",
              "comment": "an ID number returned by [`UI.on`](#link). If this is not defined, all handlers in this type will be removed.",
              "type": "number",
              "default": false
            }
          ],
          "tags": []
        }
      ]
    },
    {
      "name": "offClick",
      "source": [
        [
          "UI.ts",
          373,
          10
        ]
      ],
      "id": 952,
      "flags": {},
      "overrides": false,
      "inherits": false,
      "signatures": [
        {
          "comment": "Remove an existing click handler",
          "returns": "boolean",
          "returns_comment": "a boolean indicating whether the handler was removed successfully\n",
          "parameters": [
            {
              "name": "id",
              "comment": "an ID number returned by [`UIButton.onClick`](#link). If this is not defined, all handlers in this type will be removed.",
              "type": "number",
              "default": false
            }
          ],
          "tags": []
        }
      ]
    },
    {
      "name": "offHover",
      "source": [
        [
          "UI.ts",
          398,
          10
        ]
      ],
      "id": 959,
      "flags": {},
      "overrides": false,
      "inherits": false,
      "signatures": [
        {
          "comment": "Remove handlers for hover events.",
          "returns": "boolean[]",
          "returns_comment": "an array of booleans indicating whether the handlers were removed successfully\n",
          "parameters": [
            {
              "name": "enterID",
              "comment": "an ID number returned by [`UI.onClick`](#link), or -1 to skip. If this is not defined, all handlers in this type will be removed.",
              "type": "number",
              "default": false
            },
            {
              "name": "leaveID",
              "comment": "an ID number returned by [`UI.onClick`](#link), or -1 to skip. If this is not defined, all handlers in this type will be removed.",
              "type": "number",
              "default": false
            }
          ],
          "tags": []
        }
      ]
    },
    {
      "name": "on",
      "source": [
        [
          "UI.ts",
          142,
          4
        ]
      ],
      "id": 1012,
      "flags": {},
      "overrides": false,
      "inherits": "UI.on",
      "signatures": [
        {
          "comment": "Add an event handler. Remember this UI will also need to be tracked for events via `UI.track`.",
          "returns": "number",
          "returns_comment": "an id number that reference to this handler, for use in [`UI.off`](#link)\n",
          "parameters": [
            {
              "name": "type",
              "comment": "event type",
              "type": "string",
              "default": false
            },
            {
              "name": "fn",
              "comment": "a [`UIHandler`](#link) callback function: `fn( target:UI, pt:Pt, type:string )`",
              "type": "UIHandler",
              "default": false
            }
          ],
          "tags": []
        }
      ]
    },
    {
      "name": "onClick",
      "source": [
        [
          "UI.ts",
          363,
          9
        ]
      ],
      "id": 949,
      "flags": {},
      "overrides": false,
      "inherits": false,
      "signatures": [
        {
          "comment": "Add a new click handler. Remember this button will also need to be tracked for events via `UI.track`.",
          "returns": "number",
          "returns_comment": "an id number that refers to this handler, for use in [`UIButton.offClick`](#link) or [`UI.off`](#link).\n",
          "parameters": [
            {
              "name": "fn",
              "comment": "a [`UIHandler`](#link) callback function: `fn( target:UI, pt:Pt, type:string )`",
              "type": "UIHandler",
              "default": false
            }
          ],
          "tags": []
        }
      ]
    },
    {
      "name": "onHover",
      "source": [
        [
          "UI.ts",
          384,
          9
        ]
      ],
      "id": 955,
      "flags": {},
      "overrides": false,
      "inherits": false,
      "signatures": [
        {
          "comment": "Add handlers for hover events. Remember this button will also need to be tracked for events via `UI.track`.",
          "returns": "number[]",
          "returns_comment": "id numbers that refer to enter/leave handlers, for use in [`UIButton.offHover`](#link) or [`UI.off`](#link).\n",
          "parameters": [
            {
              "name": "enter",
              "comment": "an optional [`UIHandler`](#link) function to handle when pointer enters hover. Eg, `fn( target:UI, pt:Pt, type:string )`",
              "type": "UIHandler",
              "default": false
            },
            {
              "name": "leave",
              "comment": "an optional [`UIHandler`](#link) function to handle when pointer exits hover. Eg, `fn( target:UI, pt:Pt, type:string )`",
              "type": "UIHandler",
              "default": false
            }
          ],
          "tags": []
        }
      ]
    },
    {
      "name": "render",
      "source": [
        [
          "UI.ts",
          228,
          8
        ]
      ],
      "id": 1037,
      "flags": {},
      "overrides": false,
      "inherits": "UI.render",
      "signatures": [
        {
          "comment": "Take a custom render function to render this UI.",
          "returns": "void",
          "returns_comment": false,
          "parameters": [
            {
              "name": "fn",
              "comment": "a render function\n",
              "type": " Fn(group:Group, )",
              "default": false
            }
          ],
          "tags": []
        }
      ]
    },
    {
      "name": "state",
      "source": [
        [
          "UI.ts",
          126,
          7
        ]
      ],
      "id": 1008,
      "flags": {},
      "overrides": false,
      "inherits": "UI.state",
      "signatures": [
        {
          "comment": "Get and/or set a specific UI state.",
          "returns": "any",
          "returns_comment": false,
          "parameters": [
            {
              "name": "key",
              "comment": "state's name",
              "type": "string",
              "default": false
            },
            {
              "name": "value",
              "comment": "optionally set a new value for this state.key",
              "type": "any",
              "default": false
            }
          ],
          "tags": []
        }
      ]
    },
    {
      "name": "toString",
      "source": [
        [
          "UI.ts",
          236,
          10
        ]
      ],
      "id": 1047,
      "flags": {},
      "overrides": false,
      "inherits": "UI.toString",
      "signatures": [
        {
          "comment": "Returns a string representation of this UI",
          "returns": "string",
          "returns_comment": false,
          "parameters": [],
          "tags": []
        }
      ]
    },
    {
      "name": "unhold",
      "source": [
        [
          "UI.ts",
          201,
          18
        ]
      ],
      "id": 1028,
      "flags": {
        "isProtected": true
      },
      "overrides": false,
      "inherits": "UI.unhold",
      "signatures": [
        {
          "comment": "Stop keeping track of this action",
          "returns": "void",
          "returns_comment": false,
          "parameters": [
            {
              "name": "key",
              "comment": "an id returned by the [`UI.hold`](#link) function\n",
              "type": "number",
              "default": false
            }
          ],
          "tags": []
        }
      ]
    },
    {
      "name": "fromCircle",
      "source": [
        [
          "UI.ts",
          73,
          19
        ]
      ],
      "id": 981,
      "flags": {
        "isStatic": true
      },
      "overrides": false,
      "inherits": "UI.fromCircle",
      "signatures": [
        {
          "comment": "A static helper function to create a Circle UI.",
          "returns": "UI",
          "returns_comment": false,
          "parameters": [
            {
              "name": "group",
              "comment": "a group that defines a rectangle",
              "type": "GroupLike",
              "default": false
            },
            {
              "name": "states",
              "comment": "optional a state object keep track of custom states for this UI",
              "type": "__type",
              "default": false
            },
            {
              "name": "id",
              "comment": "optional id string\n",
              "type": "string",
              "default": false
            }
          ],
          "tags": []
        }
      ]
    },
    {
      "name": "fromPolygon",
      "source": [
        [
          "UI.ts",
          84,
          20
        ]
      ],
      "id": 986,
      "flags": {
        "isStatic": true
      },
      "overrides": false,
      "inherits": "UI.fromPolygon",
      "signatures": [
        {
          "comment": "A static helper function to create a Polygon UI.",
          "returns": "UI",
          "returns_comment": false,
          "parameters": [
            {
              "name": "group",
              "comment": "a group that defines a rectangle",
              "type": "GroupLike",
              "default": false
            },
            {
              "name": "states",
              "comment": "optional a state object keep track of custom states for this UI",
              "type": "__type",
              "default": false
            },
            {
              "name": "id",
              "comment": "optional id string\n",
              "type": "string",
              "default": false
            }
          ],
          "tags": []
        }
      ]
    },
    {
      "name": "fromRectangle",
      "source": [
        [
          "UI.ts",
          62,
          22
        ]
      ],
      "id": 976,
      "flags": {
        "isStatic": true
      },
      "overrides": false,
      "inherits": "UI.fromRectangle",
      "signatures": [
        {
          "comment": "A static helper function to create a Rectangle UI.",
          "returns": "UI",
          "returns_comment": false,
          "parameters": [
            {
              "name": "group",
              "comment": "a group that defines a rectangle",
              "type": "GroupLike",
              "default": false
            },
            {
              "name": "states",
              "comment": "optional a state object keep track of custom states for this UI",
              "type": "__type",
              "default": false
            },
            {
              "name": "id",
              "comment": "optional id string\n",
              "type": "string",
              "default": false
            }
          ],
          "tags": []
        }
      ]
    },
    {
      "name": "fromUI",
      "source": [
        [
          "UI.ts",
          94,
          15
        ]
      ],
      "id": 991,
      "flags": {
        "isStatic": true
      },
      "overrides": false,
      "inherits": "UI.fromUI",
      "signatures": [
        {
          "comment": "A static helper function to create a new UI based on another UI.",
          "returns": "UI",
          "returns_comment": false,
          "parameters": [
            {
              "name": "ui",
              "comment": "base UI",
              "type": "UI",
              "default": false
            },
            {
              "name": "states",
              "comment": "optional a state object keep track of custom states for this UI\n",
              "type": "object",
              "default": false
            },
            {
              "name": "id",
              "comment": "",
              "type": "string",
              "default": false
            }
          ],
          "tags": []
        }
      ]
    },
    {
      "name": "track",
      "source": [
        [
          "UI.ts",
          217,
          14
        ]
      ],
      "id": 1031,
      "flags": {
        "isStatic": true
      },
      "overrides": false,
      "inherits": "UI.track",
      "signatures": [
        {
          "comment": "A static function to listen for a list of UIs. See also [`UI.listen`](#link).",
          "returns": "void",
          "returns_comment": false,
          "parameters": [
            {
              "name": "uis",
              "comment": "an array of UI",
              "type": "UI[]",
              "default": false
            },
            {
              "name": "type",
              "comment": "an action type. Can be one of `UIPointerActions` or a custom one.",
              "type": "string",
              "default": false
            },
            {
              "name": "p",
              "comment": "a point to check",
              "type": "PtLike",
              "default": false
            },
            {
              "name": "evt",
              "comment": "a MouseEvent emitted by the browser (See [MDN docs](https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent))\n",
              "type": "MouseEvent",
              "default": false
            }
          ],
          "tags": []
        }
      ]
    }
  ],
  "variables": [],
  "properties": [],
  "flags": {},
  "extends": [
    "UI"
  ],
  "implements": []
}